{"ast":null,"code":"import Auth from '../utils/auth';\nconst host = 'http://localhost:5000/';\n\nasync function register(username, email, password) {\n  const res = await window.fetch(host + 'auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  return res.json();\n}\n\nasync function login(email, password) {\n  const res = await window.fetch(host + 'auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return res.json();\n}\n\nasync function fetchStats() {\n  const res = await window.fetch(host + 'stats');\n  return res.json();\n}\n\nasync function fetchProducts() {\n  const res = await window.fetch(host + 'pizza/all');\n  return res.json();\n}\n\nasync function createProduct(data) {\n  const res = await window.fetch(host + 'pizza/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\nasync function editProduct(id, data) {\n  const res = await window.fetch(host + `pizza/edit/${id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\nasync function deleteProduct(id) {\n  const res = await window.fetch(host + `pizza/delete/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  });\n  return res.json();\n}\n\nasync function createReview(id, data) {\n  const res = await window.fetch(host + `pizza/review/${id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\nasync function likeProduct(id) {\n  const res = await window.fetch(host + `pizza/like/${id}`, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  });\n  return res.json();\n}\n\nasync function unlikeProduct(id) {\n  const res = await window.fetch(host + `pizza/unlike/${id}`, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  });\n  return res.json();\n}\n\nasync function submitOrder(data) {\n  const res = await window.fetch(host + 'orders/submit', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\nasync function fetchUserOrders() {\n  const res = await window.fetch(host + 'orders/user', {\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  });\n  return res.json();\n}\n\nasync function fetchPendingOrders() {\n  const res = await window.fetch(host + 'orders/pending', {\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  });\n  return res.json();\n}\n\nasync function approveOrder(id) {\n  const res = await window.fetch(host + `orders/approve/${id}`, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  });\n  return res.json();\n}\n\nexport { register, login, fetchProducts, createProduct, editProduct, deleteProduct, fetchStats, createReview, likeProduct, unlikeProduct, submitOrder, fetchUserOrders, fetchPendingOrders, approveOrder };","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/api/remote.js"],"names":["Auth","host","register","username","email","password","res","window","fetch","method","headers","body","JSON","stringify","json","login","fetchStats","fetchProducts","createProduct","data","getToken","editProduct","id","deleteProduct","createReview","likeProduct","unlikeProduct","submitOrder","fetchUserOrders","fetchPendingOrders","approveOrder"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,MAAMC,IAAI,GAAG,wBAAb;;AAEA,eAAeC,QAAf,CAAyBC,QAAzB,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD;AAClD,QAAMC,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,aAApB,EAAmC;AACnDQ,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF0C;AAKnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,MAAAA,QADmB;AAEnBC,MAAAA,KAFmB;AAGnBC,MAAAA;AAHmB,KAAf;AAL6C,GAAnC,CAAlB;AAYA,SAAOC,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeC,KAAf,CAAsBX,KAAtB,EAA6BC,QAA7B,EAAuC;AACrC,QAAMC,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,YAApB,EAAkC;AAClDQ,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFyC;AAKlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,MAAAA,KADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAL4C,GAAlC,CAAlB;AAWA,SAAOC,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeE,UAAf,GAA6B;AAC3B,QAAMV,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,OAApB,CAAlB;AACA,SAAOK,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeG,aAAf,GAAgC;AAC9B,QAAMX,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,WAApB,CAAlB;AACA,SAAOK,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeI,aAAf,CAA8BC,IAA9B,EAAoC;AAClC,QAAMb,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,cAApB,EAAoC;AACpDQ,IAAAA,MAAM,EAAE,MAD4C;AAEpDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AAFtB,KAF2C;AAMpDT,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,IAAf;AAN8C,GAApC,CAAlB;AASA,SAAOb,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeO,WAAf,CAA4BC,EAA5B,EAAgCH,IAAhC,EAAsC;AACpC,QAAMb,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAI,cAAaqB,EAAG,EAArC,EAAwC;AACxDb,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AAFtB,KAF+C;AAMxDT,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,IAAf;AANkD,GAAxC,CAAlB;AASA,SAAOb,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeS,aAAf,CAA8BD,EAA9B,EAAkC;AAChC,QAAMhB,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAI,gBAAeqB,EAAG,EAAvC,EAA0C;AAC1Db,IAAAA,MAAM,EAAE,QADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AADtB;AAFiD,GAA1C,CAAlB;AAOA,SAAOd,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeU,YAAf,CAA6BF,EAA7B,EAAiCH,IAAjC,EAAuC;AACrC,QAAMb,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAI,gBAAeqB,EAAG,EAAvC,EAA0C;AAC1Db,IAAAA,MAAM,EAAE,MADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AAFtB,KAFiD;AAM1DT,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,IAAf;AANoD,GAA1C,CAAlB;AASA,SAAOb,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeW,WAAf,CAA4BH,EAA5B,EAAgC;AAC9B,QAAMhB,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAI,cAAaqB,EAAG,EAArC,EAAwC;AACxDb,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AADtB;AAF+C,GAAxC,CAAlB;AAOA,SAAOd,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAeY,aAAf,CAA8BJ,EAA9B,EAAkC;AAChC,QAAMhB,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAI,gBAAeqB,EAAG,EAAvC,EAA0C;AAC1Db,IAAAA,MAAM,EAAE,MADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AADtB;AAFiD,GAA1C,CAAlB;AAOA,SAAOd,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAea,WAAf,CAA4BR,IAA5B,EAAkC;AAChC,QAAMb,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,eAApB,EAAqC;AACrDQ,IAAAA,MAAM,EAAE,MAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AAFtB,KAF4C;AAMrDT,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,IAAf;AAN+C,GAArC,CAAlB;AASA,SAAOb,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAec,eAAf,GAAkC;AAChC,QAAMtB,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,aAApB,EAAmC;AACnDS,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AADtB;AAD0C,GAAnC,CAAlB;AAKA,SAAOd,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAee,kBAAf,GAAqC;AACnC,QAAMvB,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAG,gBAApB,EAAsC;AACtDS,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AADtB;AAD6C,GAAtC,CAAlB;AAKA,SAAOd,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,eAAegB,YAAf,CAA6BR,EAA7B,EAAiC;AAC/B,QAAMhB,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaP,IAAI,GAAI,kBAAiBqB,EAAG,EAAzC,EAA4C;AAC5Db,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYV,IAAI,CAACoB,QAAL;AADtB;AAFmD,GAA5C,CAAlB;AAOA,SAAOd,GAAG,CAACQ,IAAJ,EAAP;AACD;;AAED,SACEZ,QADF,EAEEa,KAFF,EAGEE,aAHF,EAIEC,aAJF,EAKEG,WALF,EAMEE,aANF,EAOEP,UAPF,EAQEQ,YARF,EASEC,WATF,EAUEC,aAVF,EAWEC,WAXF,EAYEC,eAZF,EAaEC,kBAbF,EAcEC,YAdF","sourcesContent":["import Auth from '../utils/auth'\nconst host = 'http://localhost:5000/'\n\nasync function register (username, email, password) {\n  const res = await window.fetch(host + 'auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  })\n\n  return res.json()\n}\n\nasync function login (email, password) {\n  const res = await window.fetch(host + 'auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  })\n\n  return res.json()\n}\n\nasync function fetchStats () {\n  const res = await window.fetch(host + 'stats')\n  return res.json()\n}\n\nasync function fetchProducts () {\n  const res = await window.fetch(host + 'pizza/all')\n  return res.json()\n}\n\nasync function createProduct (data) {\n  const res = await window.fetch(host + 'pizza/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  })\n\n  return res.json()\n}\n\nasync function editProduct (id, data) {\n  const res = await window.fetch(host + `pizza/edit/${id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  })\n\n  return res.json()\n}\n\nasync function deleteProduct (id) {\n  const res = await window.fetch(host + `pizza/delete/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  })\n\n  return res.json()\n}\n\nasync function createReview (id, data) {\n  const res = await window.fetch(host + `pizza/review/${id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  })\n\n  return res.json()\n}\n\nasync function likeProduct (id) {\n  const res = await window.fetch(host + `pizza/like/${id}`, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  })\n\n  return res.json()\n}\n\nasync function unlikeProduct (id) {\n  const res = await window.fetch(host + `pizza/unlike/${id}`, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  })\n\n  return res.json()\n}\n\nasync function submitOrder (data) {\n  const res = await window.fetch(host + 'orders/submit', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + Auth.getToken()\n    },\n    body: JSON.stringify(data)\n  })\n\n  return res.json()\n}\n\nasync function fetchUserOrders () {\n  const res = await window.fetch(host + 'orders/user', {\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  })\n  return res.json()\n}\n\nasync function fetchPendingOrders () {\n  const res = await window.fetch(host + 'orders/pending', {\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  })\n  return res.json()\n}\n\nasync function approveOrder (id) {\n  const res = await window.fetch(host + `orders/approve/${id}`, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'bearer ' + Auth.getToken()\n    }\n  })\n\n  return res.json()\n}\n\nexport {\n  register,\n  login,\n  fetchProducts,\n  createProduct,\n  editProduct,\n  deleteProduct,\n  fetchStats,\n  createReview,\n  likeProduct,\n  unlikeProduct,\n  submitOrder,\n  fetchUserOrders,\n  fetchPendingOrders,\n  approveOrder\n}\n"]},"metadata":{},"sourceType":"module"}