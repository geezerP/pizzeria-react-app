{"ast":null,"code":"const registerValidationFunc = (email, username, password, confirmPassword) => {\n  let validEmail = (() => {\n    let mailRegex = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    let testMail = mailRegex.test(email);\n\n    if (testMail && email !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validUsername = (() => {\n    if (username.length > 3 && username !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validPassword = (() => {\n    if (password.length > 7 && password !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validConfirmPassword = (() => {\n    if (confirmPassword.length > 7 && confirmPassword !== '' && confirmPassword === password) {\n      return true;\n    }\n\n    return false;\n  })();\n\n  return {\n    validEmail,\n    validUsername,\n    validPassword,\n    validConfirmPassword\n  };\n};\n\nconst loginValidationFunc = (email, password) => {\n  let validEmail = (() => {\n    let emailRegex = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    let testMail = emailRegex.test(email);\n\n    if (testMail && email !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validPassword = (() => {\n    if (password.length > 7 && password !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  return {\n    validEmail,\n    validPassword\n  };\n};\n\nconst createProductValidationFunc = (name, ingredients, description, image, weight, price) => {\n  let validName = (() => {\n    if (name.length > 2 && name !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validIngredients = (() => {\n    if (ingredients.length > 2 && ingredients.indexOf(', ') < 0 && ingredients !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validDescription = (() => {\n    if (description.length > 10 && description.length <= 200 && description !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validImage = (() => {\n    if ((image.startsWith('https://') || image.startsWith('http://')) && image.length >= 14) {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validWeight = (() => {\n    if (weight >= 250 && weight <= 800 && weight !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  let validPrice = (() => {\n    if (price > 0 && price !== '') {\n      return true;\n    }\n\n    return false;\n  })();\n\n  return {\n    validName,\n    validIngredients,\n    validDescription,\n    validImage,\n    validWeight,\n    validPrice\n  };\n};\n\nexport { registerValidationFunc, loginValidationFunc, createProductValidationFunc };","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/utils/formValidator.js"],"names":["registerValidationFunc","email","username","password","confirmPassword","validEmail","mailRegex","RegExp","testMail","test","validUsername","length","validPassword","validConfirmPassword","loginValidationFunc","emailRegex","createProductValidationFunc","name","ingredients","description","image","weight","price","validName","validIngredients","indexOf","validDescription","validImage","startsWith","validWeight","validPrice"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,CAC7BC,KAD6B,EAE7BC,QAF6B,EAG7BC,QAH6B,EAI7BC,eAJ6B,KAK1B;AACH,MAAIC,UAAU,GAAG,CAAC,MAAM;AACtB,QAAIC,SAAS,GAAG,IAAIC,MAAJ,CACd,sJADc,CAAhB;AAGA,QAAIC,QAAQ,GAAGF,SAAS,CAACG,IAAV,CAAeR,KAAf,CAAf;;AACA,QAAIO,QAAQ,IAAIP,KAAK,KAAK,EAA1B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GATgB,GAAjB;;AAWA,MAAIS,aAAa,GAAG,CAAC,MAAM;AACzB,QAAIR,QAAQ,CAACS,MAAT,GAAkB,CAAlB,IACFT,QAAQ,KAAK,EADf,EACmB;AACjB,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GANmB,GAApB;;AAQA,MAAIU,aAAa,GAAG,CAAC,MAAM;AACzB,QACET,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,IACAR,QAAQ,KAAK,EAFf,EAGE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARmB,GAApB;;AAUA,MAAIU,oBAAoB,GAAG,CAAC,MAAM;AAChC,QACET,eAAe,CAACO,MAAhB,GAAyB,CAAzB,IACAP,eAAe,KAAK,EADpB,IAEAA,eAAe,KAAKD,QAHtB,EAIE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAT0B,GAA3B;;AAWA,SAAO;AACLE,IAAAA,UADK;AAELK,IAAAA,aAFK;AAGLE,IAAAA,aAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CApDD;;AAsDA,MAAMC,mBAAmB,GAAG,CAACb,KAAD,EAAQE,QAAR,KAAqB;AAC/C,MAAIE,UAAU,GAAG,CAAC,MAAM;AACtB,QAAIU,UAAU,GAAG,IAAIR,MAAJ,CACf,sJADe,CAAjB;AAGA,QAAIC,QAAQ,GAAGO,UAAU,CAACN,IAAX,CAAgBR,KAAhB,CAAf;;AACA,QAAIO,QAAQ,IAAIP,KAAK,KAAK,EAA1B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GATgB,GAAjB;;AAWA,MAAIW,aAAa,GAAG,CAAC,MAAM;AACzB,QACET,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,IACAR,QAAQ,KAAK,EAFf,EAGE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARmB,GAApB;;AAUA,SAAO;AACLE,IAAAA,UADK;AAELO,IAAAA;AAFK,GAAP;AAID,CA1BD;;AA4BA,MAAMI,2BAA2B,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,WAApB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,KAAhD,KAA0D;AAC5F,MAAIC,SAAS,GAAG,CAAC,MAAM;AACrB,QACEN,IAAI,CAACN,MAAL,GAAc,CAAd,IACAM,IAAI,KAAK,EAFX,EAGE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARe,GAAhB;;AAUA,MAAIO,gBAAgB,GAAG,CAAC,MAAM;AAC5B,QACEN,WAAW,CAACP,MAAZ,GAAqB,CAArB,IACAO,WAAW,CAACO,OAAZ,CAAoB,IAApB,IAA4B,CAD5B,IAEAP,WAAW,KAAK,EAHlB,EAIE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GATsB,GAAvB;;AAWA,MAAIQ,gBAAgB,GAAG,CAAC,MAAM;AAC5B,QACEP,WAAW,CAACR,MAAZ,GAAqB,EAArB,IACAQ,WAAW,CAACR,MAAZ,IAAsB,GADtB,IAEAQ,WAAW,KAAK,EAHlB,EAIE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GATsB,GAAvB;;AAWA,MAAIQ,UAAU,GAAG,CAAC,MAAM;AACtB,QACE,CAACP,KAAK,CAACQ,UAAN,CAAiB,UAAjB,KAAgCR,KAAK,CAACQ,UAAN,CAAiB,SAAjB,CAAjC,KAAiER,KAAK,CAACT,MAAN,IAAgB,EADnF,EAEE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAPgB,GAAjB;;AASA,MAAIkB,WAAW,GAAG,CAAC,MAAM;AACvB,QACER,MAAM,IAAI,GAAV,IACAA,MAAM,IAAI,GADV,IAEAA,MAAM,KAAK,EAHb,EAIE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GATiB,GAAlB;;AAWA,MAAIS,UAAU,GAAG,CAAC,MAAM;AACtB,QACER,KAAK,GAAG,CAAR,IACAA,KAAK,KAAK,EAFZ,EAGE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARgB,GAAjB;;AAUA,SAAO;AACLC,IAAAA,SADK;AAELC,IAAAA,gBAFK;AAGLE,IAAAA,gBAHK;AAILC,IAAAA,UAJK;AAKLE,IAAAA,WALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CAvED;;AAyEA,SACE9B,sBADF,EAEEc,mBAFF,EAGEE,2BAHF","sourcesContent":["const registerValidationFunc = (\n  email,\n  username,\n  password,\n  confirmPassword\n) => {\n  let validEmail = (() => {\n    let mailRegex = new RegExp(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    )\n    let testMail = mailRegex.test(email)\n    if (testMail && email !== '') {\n      return true\n    }\n    return false\n  })()\n\n  let validUsername = (() => {\n    if (username.length > 3 &&\n      username !== '') {\n      return true\n    }\n    return false\n  })()\n\n  let validPassword = (() => {\n    if (\n      password.length > 7 &&\n      password !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  let validConfirmPassword = (() => {\n    if (\n      confirmPassword.length > 7 &&\n      confirmPassword !== '' &&\n      confirmPassword === password\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  return {\n    validEmail,\n    validUsername,\n    validPassword,\n    validConfirmPassword\n  }\n}\n\nconst loginValidationFunc = (email, password) => {\n  let validEmail = (() => {\n    let emailRegex = new RegExp(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    )\n    let testMail = emailRegex.test(email)\n    if (testMail && email !== '') {\n      return true\n    }\n    return false\n  })()\n\n  let validPassword = (() => {\n    if (\n      password.length > 7 &&\n      password !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  return {\n    validEmail,\n    validPassword\n  }\n}\n\nconst createProductValidationFunc = (name, ingredients, description, image, weight, price) => {\n  let validName = (() => {\n    if (\n      name.length > 2 &&\n      name !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  let validIngredients = (() => {\n    if (\n      ingredients.length > 2 &&\n      ingredients.indexOf(', ') < 0 &&\n      ingredients !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  let validDescription = (() => {\n    if (\n      description.length > 10 &&\n      description.length <= 200 &&\n      description !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  let validImage = (() => {\n    if (\n      (image.startsWith('https://') || image.startsWith('http://')) && image.length >= 14\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  let validWeight = (() => {\n    if (\n      weight >= 250 &&\n      weight <= 800 &&\n      weight !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  let validPrice = (() => {\n    if (\n      price > 0 &&\n      price !== ''\n    ) {\n      return true\n    }\n    return false\n  })()\n\n  return {\n    validName,\n    validIngredients,\n    validDescription,\n    validImage,\n    validWeight,\n    validPrice\n  }\n}\n\nexport {\n  registerValidationFunc,\n  loginValidationFunc,\n  createProductValidationFunc\n}\n"]},"metadata":{},"sourceType":"module"}