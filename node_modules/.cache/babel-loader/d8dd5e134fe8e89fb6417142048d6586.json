{"ast":null,"code":"import { ADD_TO_CART, SYNC_CART, REMOVE_FROM_CART, SUBMIT_ORDER } from '../actions/actionTypes';\n\nfunction cartReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      let product = state.find(p => p.id === action.id);\n\n      if (product) {\n        return state;\n      }\n\n      let newState = state.slice();\n      newState.push({\n        id: action.id,\n        quantity: 1\n      });\n      return newState;\n\n    case SYNC_CART:\n      product = state.find(p => p.id === action.id);\n\n      if (product.quantity === action.quantity) {\n        return state;\n      }\n\n      newState = state.slice();\n      newState.find(p => p.id === action.id).quantity = action.quantity;\n      return newState;\n\n    case REMOVE_FROM_CART:\n      newState = [];\n\n      for (const product of state) {\n        if (product.id !== action.id) {\n          newState.push(product);\n        }\n      }\n\n      return newState;\n\n    case SUBMIT_ORDER:\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/reducers/cartReducer.js"],"names":["ADD_TO_CART","SYNC_CART","REMOVE_FROM_CART","SUBMIT_ORDER","cartReducer","state","action","type","product","find","p","id","newState","slice","push","quantity"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,gBAAhC,EAAkDC,YAAlD,QAAqE,wBAArE;;AAEA,SAASC,WAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,UAAIQ,OAAO,GAAGH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAAhC,CAAd;;AACA,UAAIH,OAAJ,EAAa;AACX,eAAOH,KAAP;AACD;;AACD,UAAIO,QAAQ,GAAGP,KAAK,CAACQ,KAAN,EAAf;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAc;AAACH,QAAAA,EAAE,EAAEL,MAAM,CAACK,EAAZ;AAAgBI,QAAAA,QAAQ,EAAE;AAA1B,OAAd;AACA,aAAOH,QAAP;;AACF,SAAKX,SAAL;AACEO,MAAAA,OAAO,GAAGH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAAhC,CAAV;;AACA,UAAIH,OAAO,CAACO,QAAR,KAAqBT,MAAM,CAACS,QAAhC,EAA0C;AACxC,eAAOV,KAAP;AACD;;AACDO,MAAAA,QAAQ,GAAGP,KAAK,CAACQ,KAAN,EAAX;AACAD,MAAAA,QAAQ,CAACH,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAAnC,EAAuCI,QAAvC,GAAkDT,MAAM,CAACS,QAAzD;AACA,aAAOH,QAAP;;AACF,SAAKV,gBAAL;AACEU,MAAAA,QAAQ,GAAG,EAAX;;AACA,WAAK,MAAMJ,OAAX,IAAsBH,KAAtB,EAA6B;AAC3B,YAAIG,OAAO,CAACG,EAAR,KAAeL,MAAM,CAACK,EAA1B,EAA8B;AAC5BC,UAAAA,QAAQ,CAACE,IAAT,CAAcN,OAAd;AACD;AACF;;AACD,aAAOI,QAAP;;AACF,SAAKT,YAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOE,KAAP;AA5BJ;AA8BD;;AAED,eAAeD,WAAf","sourcesContent":["import {ADD_TO_CART, SYNC_CART, REMOVE_FROM_CART, SUBMIT_ORDER} from '../actions/actionTypes'\n\nfunction cartReducer (state = [], action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      let product = state.find(p => p.id === action.id)\n      if (product) {\n        return state\n      }\n      let newState = state.slice()\n      newState.push({id: action.id, quantity: 1})\n      return newState\n    case SYNC_CART:\n      product = state.find(p => p.id === action.id)\n      if (product.quantity === action.quantity) {\n        return state\n      }\n      newState = state.slice()\n      newState.find(p => p.id === action.id).quantity = action.quantity\n      return newState\n    case REMOVE_FROM_CART:\n      newState = []\n      for (const product of state) {\n        if (product.id !== action.id) {\n          newState.push(product)\n        }\n      }\n      return newState\n    case SUBMIT_ORDER:\n      return []\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}