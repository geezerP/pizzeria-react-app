{"ast":null,"code":"var _jsxFileName = \"/home/geezer/projects/pizzeria/pizzeria-react-app/src/components/auth/RegisterPage.js\";\nimport React from 'react';\nimport Input from '../common/Input';\nimport registerValidator from '../../utils/registerValidator';\nimport toastr from 'toastr';\nimport Auth from '../../utils/auth';\nimport { registerValidationFunc } from '../../utils/formValidator';\nimport { registerAction, loginAction, redirectAction } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    if (Auth.isUserAuthenticated()) {\n      this.props.history.push('/');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.registerError.hasError) {\n      toastr.error(nextProps.registerError.message);\n    } else if (nextProps.registerSuccess) {\n      this.props.login(this.state.email, this.state.password);\n    } else if (nextProps.loginSuccess) {\n      this.props.redirect();\n      toastr.success('Registration successful');\n      this.props.history.push('/');\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if (!registerValidator(this.state.username, this.state.email, this.state.password, this.state.confirmPassword)) return;\n    this.props.register(this.state.username, this.state.email, this.state.password);\n  }\n\n  render() {\n    let validObj = registerValidationFunc(this.state.email, this.state.username, this.state.password, this.state.confirmPassword);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row space-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Register\"))), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row space-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      label: \"E-mail\",\n      placeholder: \"Enter e-mail\",\n      value: this.state.email,\n      onChange: this.onChange,\n      valid: validObj.validEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      label: \"Username\",\n      placeholder: \"Enter username\",\n      value: this.state.username,\n      onChange: this.onChange,\n      valid: validObj.validUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      placeholder: \"Enter password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      valid: validObj.validPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      placeholder: \"Enter your password again\",\n      value: this.state.confirmPassword,\n      onChange: this.onChange,\n      valid: validObj.validConfirmPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    registerSuccess: state.register.success,\n    loginSuccess: state.login.success,\n    registerError: state.registerError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    register: (username, email, password) => dispatch(registerAction(username, email, password)),\n    login: (email, password) => dispatch(loginAction(email, password)),\n    redirect: () => dispatch(redirectAction())\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RegisterPage));","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/components/auth/RegisterPage.js"],"names":["React","Input","registerValidator","toastr","Auth","registerValidationFunc","registerAction","loginAction","redirectAction","connect","withRouter","RegisterPage","Component","constructor","props","state","username","email","password","confirmPassword","onChange","bind","onSubmit","componentWillMount","isUserAuthenticated","history","push","componentWillReceiveProps","nextProps","registerError","hasError","error","message","registerSuccess","login","loginSuccess","redirect","success","e","setState","target","name","value","preventDefault","register","render","validObj","validEmail","validUsername","validPassword","validConfirmPassword","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Input from '../common/Input'\nimport registerValidator from '../../utils/registerValidator'\nimport toastr from 'toastr'\nimport Auth from '../../utils/auth'\nimport {registerValidationFunc} from '../../utils/formValidator'\nimport {registerAction, loginAction, redirectAction} from '../../actions/authActions'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\n\nclass RegisterPage extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  componentWillMount () {\n    if (Auth.isUserAuthenticated()) {\n      this.props.history.push('/')\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.registerError.hasError) {\n      toastr.error(nextProps.registerError.message)\n    } else if (nextProps.registerSuccess) {\n      this.props.login(this.state.email, this.state.password)\n    } else if (nextProps.loginSuccess) {\n      this.props.redirect()\n      toastr.success('Registration successful')\n      this.props.history.push('/')\n    }\n  }\n\n  onChange (e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onSubmit (e) {\n    e.preventDefault()\n    if (!registerValidator(this.state.username, this.state.email, this.state.password, this.state.confirmPassword)) return\n    this.props.register(this.state.username, this.state.email, this.state.password)\n  }\n\n  render () {\n    let validObj = registerValidationFunc(\n      this.state.email,\n      this.state.username,\n      this.state.password,\n      this.state.confirmPassword\n    )\n\n    return (\n      <div className='container'>\n        <div className='row space-top'>\n          <div className='col-md-12'>\n            <h1>Register</h1>\n          </div>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <div className='row space-top'>\n            <div className='col-md-4'>\n              <Input\n                type='text'\n                name='email'\n                label='E-mail'\n                placeholder='Enter e-mail'\n                value={this.state.email}\n                onChange={this.onChange}\n                valid={validObj.validEmail} />\n              <Input\n                type='text'\n                name='username'\n                label='Username'\n                placeholder='Enter username'\n                value={this.state.username}\n                onChange={this.onChange}\n                valid={validObj.validUsername} />\n              <Input\n                type='password'\n                name='password'\n                label='Password'\n                placeholder='Enter password'\n                value={this.state.password}\n                onChange={this.onChange}\n                valid={validObj.validPassword} />\n              <Input\n                type='password'\n                name='confirmPassword'\n                label='Confirm Password'\n                placeholder='Enter your password again'\n                value={this.state.confirmPassword}\n                onChange={this.onChange}\n                valid={validObj.validConfirmPassword} />\n              <input type='submit' className='btn btn-primary' value='Register' />\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    registerSuccess: state.register.success,\n    loginSuccess: state.login.success,\n    registerError: state.registerError\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    register: (username, email, password) => dispatch(registerAction(username, email, password)),\n    login: (email, password) => dispatch(loginAction(email, password)),\n    redirect: () => dispatch(redirectAction())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RegisterPage))\n"]},"metadata":{},"sourceType":"module"}