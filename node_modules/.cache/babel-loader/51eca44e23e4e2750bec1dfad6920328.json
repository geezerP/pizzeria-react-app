{"ast":null,"code":"import { FETCH_DATA_SUCCESS, CREATE_PIZZA_SUCCESS, CREATE_PIZZA_ERROR, EDIT_PIZZA_SUCCESS, EDIT_PIZZA_ERROR, CREATE_REVIEW_SUCCESS, CREATE_REVIEW_ERROR, LIKE_PRODUCT, UNLIKE_PRODUCT, DELETE_PIZZA } from './actionTypes';\nimport { beginAjax, endAjax } from './ajaxStatusActions';\nimport { fetchProducts, createProduct, editProduct, createReview, likeProduct, unlikeProduct, deleteProduct } from '../api/remote';\nimport errorHandler from '../utils/errorHandler';\n\nfunction fetchDataSuccess(data) {\n  return {\n    type: FETCH_DATA_SUCCESS,\n    data\n  };\n}\n\nfunction createSuccess(data) {\n  return {\n    type: CREATE_PIZZA_SUCCESS,\n    data\n  };\n}\n\nfunction createError(error) {\n  return {\n    type: CREATE_PIZZA_ERROR,\n    error\n  };\n}\n\nfunction editSuccess(data) {\n  return {\n    type: EDIT_PIZZA_SUCCESS,\n    data\n  };\n}\n\nfunction editError(error) {\n  return {\n    type: EDIT_PIZZA_ERROR,\n    error\n  };\n}\n\nfunction deleteSuccess(id) {\n  return {\n    type: DELETE_PIZZA,\n    id\n  };\n}\n\nfunction createReviewSuccess(data) {\n  return {\n    type: CREATE_REVIEW_SUCCESS,\n    data\n  };\n}\n\nfunction createReviewError(error) {\n  return {\n    type: CREATE_REVIEW_ERROR,\n    error\n  };\n}\n\nfunction likeProductSuccess(data) {\n  return {\n    type: LIKE_PRODUCT,\n    data\n  };\n}\n\nfunction unlikeProductSuccess(data) {\n  return {\n    type: UNLIKE_PRODUCT,\n    data\n  };\n}\n\nfunction fetchProductsAction() {\n  return async dispatch => {\n    dispatch(beginAjax());\n    const data = await fetchProducts();\n    dispatch(fetchDataSuccess(data));\n    dispatch(endAjax());\n  };\n}\n\nfunction createProductAction(data) {\n  return dispatch => {\n    dispatch(beginAjax());\n    return createProduct(data).then(json => {\n      if (json.success) {\n        dispatch(createSuccess(json.data));\n      } else {\n        const error = errorHandler(json);\n        dispatch(createError(error));\n      }\n\n      dispatch(endAjax());\n    });\n  };\n}\n\nfunction editProductAction(id, data) {\n  return dispatch => {\n    dispatch(beginAjax());\n    return editProduct(id, data).then(json => {\n      if (json.success) {\n        dispatch(editSuccess(json.data));\n      } else {\n        const error = errorHandler(json);\n        dispatch(editError(error));\n      }\n\n      dispatch(endAjax());\n    });\n  };\n}\n\nfunction deleteProductAction(id) {\n  return dispatch => {\n    return deleteProduct(id).then(json => {\n      if (json.success) {\n        dispatch(deleteSuccess(id));\n      }\n    });\n  };\n}\n\nfunction createProductReviewAction(id, data) {\n  return dispatch => {\n    return createReview(id, data).then(json => {\n      if (json.success) {\n        dispatch(createReviewSuccess(json.data));\n      } else {\n        const error = errorHandler(json);\n        dispatch(createReviewError(error));\n      }\n    });\n  };\n}\n\nfunction likeProductAction(id) {\n  return dispatch => {\n    return likeProduct(id).then(json => {\n      if (json.success) {\n        dispatch(likeProductSuccess(json.data));\n      }\n    });\n  };\n}\n\nfunction unlikeProductAction(id) {\n  return dispatch => {\n    return unlikeProduct(id).then(json => {\n      if (json.success) {\n        dispatch(unlikeProductSuccess(json.data));\n      }\n    });\n  };\n}\n\nexport { fetchProductsAction, createProductAction, editProductAction, createProductReviewAction, likeProductAction, unlikeProductAction, deleteProductAction };","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/actions/productsActions.js"],"names":["FETCH_DATA_SUCCESS","CREATE_PIZZA_SUCCESS","CREATE_PIZZA_ERROR","EDIT_PIZZA_SUCCESS","EDIT_PIZZA_ERROR","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_ERROR","LIKE_PRODUCT","UNLIKE_PRODUCT","DELETE_PIZZA","beginAjax","endAjax","fetchProducts","createProduct","editProduct","createReview","likeProduct","unlikeProduct","deleteProduct","errorHandler","fetchDataSuccess","data","type","createSuccess","createError","error","editSuccess","editError","deleteSuccess","id","createReviewSuccess","createReviewError","likeProductSuccess","unlikeProductSuccess","fetchProductsAction","dispatch","createProductAction","then","json","success","editProductAction","deleteProductAction","createProductReviewAction","likeProductAction","unlikeProductAction"],"mappings":"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","sourcesContent":["import {FETCH_DATA_SUCCESS, CREATE_PIZZA_SUCCESS, CREATE_PIZZA_ERROR, EDIT_PIZZA_SUCCESS, EDIT_PIZZA_ERROR,\n  CREATE_REVIEW_SUCCESS, CREATE_REVIEW_ERROR, LIKE_PRODUCT, UNLIKE_PRODUCT, DELETE_PIZZA} from './actionTypes'\nimport {beginAjax, endAjax} from './ajaxStatusActions'\nimport {fetchProducts, createProduct, editProduct, createReview, likeProduct, unlikeProduct, deleteProduct} from '../api/remote'\nimport errorHandler from '../utils/errorHandler'\n\nfunction fetchDataSuccess (data) {\n  return {\n    type: FETCH_DATA_SUCCESS,\n    data\n  }\n}\n\nfunction createSuccess (data) {\n  return {\n    type: CREATE_PIZZA_SUCCESS,\n    data\n  }\n}\n\nfunction createError (error) {\n  return {\n    type: CREATE_PIZZA_ERROR,\n    error\n  }\n}\n\nfunction editSuccess (data) {\n  return {\n    type: EDIT_PIZZA_SUCCESS,\n    data\n  }\n}\n\nfunction editError (error) {\n  return {\n    type: EDIT_PIZZA_ERROR,\n    error\n  }\n}\n\nfunction deleteSuccess (id) {\n  return {\n    type: DELETE_PIZZA,\n    id\n  }\n}\n\nfunction createReviewSuccess (data) {\n  return {\n    type: CREATE_REVIEW_SUCCESS,\n    data\n  }\n}\n\nfunction createReviewError (error) {\n  return {\n    type: CREATE_REVIEW_ERROR,\n    error\n  }\n}\n\nfunction likeProductSuccess (data) {\n  return {\n    type: LIKE_PRODUCT,\n    data\n  }\n}\n\nfunction unlikeProductSuccess (data) {\n  return {\n    type: UNLIKE_PRODUCT,\n    data\n  }\n}\n\nfunction fetchProductsAction () {\n  return async (dispatch) => {\n    dispatch(beginAjax())\n    const data = await fetchProducts()\n    dispatch(fetchDataSuccess(data))\n    dispatch(endAjax())\n  }\n}\n\nfunction createProductAction (data) {\n  return (dispatch) => {\n    dispatch(beginAjax())\n    return createProduct(data)\n      .then(json => {\n        if (json.success) {\n          dispatch(createSuccess(json.data))\n        } else {\n          const error = errorHandler(json)\n          dispatch(createError(error))\n        }\n        dispatch(endAjax())\n      })\n  }\n}\n\nfunction editProductAction (id, data) {\n  return (dispatch) => {\n    dispatch(beginAjax())\n    return editProduct(id, data)\n      .then(json => {\n        if (json.success) {\n          dispatch(editSuccess(json.data))\n        } else {\n          const error = errorHandler(json)\n          dispatch(editError(error))\n        }\n        dispatch(endAjax())\n      })\n  }\n}\n\nfunction deleteProductAction (id) {\n  return (dispatch) => {\n    return deleteProduct(id)\n      .then(json => {\n        if (json.success) {\n          dispatch(deleteSuccess(id))\n        }\n      })\n  }\n}\n\nfunction createProductReviewAction (id, data) {\n  return (dispatch) => {\n    return createReview(id, data)\n      .then(json => {\n        if (json.success) {\n          dispatch(createReviewSuccess(json.data))\n        } else {\n          const error = errorHandler(json)\n          dispatch(createReviewError(error))\n        }\n      })\n  }\n}\n\nfunction likeProductAction (id) {\n  return (dispatch) => {\n    return likeProduct(id)\n      .then(json => {\n        if (json.success) {\n          dispatch(likeProductSuccess(json.data))\n        }\n      })\n  }\n}\n\nfunction unlikeProductAction (id) {\n  return (dispatch) => {\n    return unlikeProduct(id)\n      .then(json => {\n        if (json.success) {\n          dispatch(unlikeProductSuccess(json.data))\n        }\n      })\n  }\n}\n\nexport {\n  fetchProductsAction,\n  createProductAction,\n  editProductAction,\n  createProductReviewAction,\n  likeProductAction,\n  unlikeProductAction,\n  deleteProductAction\n}\n"]},"metadata":{},"sourceType":"module"}