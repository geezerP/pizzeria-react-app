{"ast":null,"code":"var _jsxFileName = \"/home/geezer/projects/pizzeria/pizzeria-react-app/src/components/auth/LoginPage.js\";\nimport React, { Component } from 'react';\nimport Input from '../common/Input';\nimport loginValidator from '../../utils/loginValidator';\nimport toastr from 'toastr';\nimport Auth from '../../utils/auth';\nimport { loginValidationFunc } from '../../utils/formValidator';\nimport { loginAction, redirectAction } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    if (Auth.isUserAuthenticated()) {\n      this.props.history.push('/');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.loginError.hasError) {\n      toastr.error(nextProps.loginError.message);\n    } else if (nextProps.loginSuccess) {\n      this.props.redirect();\n      toastr.success('Login successful');\n      this.props.history.push('/');\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if (!loginValidator(this.state.email, this.state.password)) return;\n    this.props.login(this.state.email, this.state.password);\n  }\n\n  render() {\n    let validObj = loginValidationFunc(this.state.email, this.state.password);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row space-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row space-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      label: \"E-mail\",\n      placeholder: \"Enter e-mail\",\n      value: this.state.email,\n      onChange: this.onChange,\n      valid: validObj.validEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      placeholder: \"Enter password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      valid: validObj.validPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loginSuccess: state.login.success,\n    loginError: state.loginError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: (email, password) => dispatch(loginAction(email, password)),\n    redirect: () => dispatch(redirectAction())\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginPage));","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/components/auth/LoginPage.js"],"names":["React","Component","Input","loginValidator","toastr","Auth","loginValidationFunc","loginAction","redirectAction","connect","withRouter","LoginPage","constructor","props","state","email","password","onChange","bind","onSubmit","componentWillMount","isUserAuthenticated","history","push","componentWillReceiveProps","nextProps","loginError","hasError","error","message","loginSuccess","redirect","success","e","setState","target","name","value","preventDefault","login","render","validObj","validEmail","validPassword","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Input from '../common/Input'\nimport loginValidator from '../../utils/loginValidator'\nimport toastr from 'toastr'\nimport Auth from '../../utils/auth'\nimport {loginValidationFunc} from '../../utils/formValidator'\nimport {loginAction, redirectAction} from '../../actions/authActions'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\n\nclass LoginPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  componentWillMount () {\n    if (Auth.isUserAuthenticated()) {\n      this.props.history.push('/')\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.loginError.hasError) {\n      toastr.error(nextProps.loginError.message)\n    } else if (nextProps.loginSuccess) {\n      this.props.redirect()\n      toastr.success('Login successful')\n      this.props.history.push('/')\n    }\n  }\n\n  onChange (e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onSubmit (e) {\n    e.preventDefault()\n    if (!loginValidator(this.state.email, this.state.password)) return\n    this.props.login(this.state.email, this.state.password)\n  }\n\n  render () {\n    let validObj = loginValidationFunc(\n      this.state.email,\n      this.state.password\n    )\n\n    return (\n      <div className='container'>\n        <div className='row space-top'>\n          <div className='col-md-12'>\n            <h1>Login</h1>\n          </div>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <div className='row space-top'>\n            <div className='col-md-4'>\n              <Input\n                type='text'\n                name='email'\n                label='E-mail'\n                placeholder='Enter e-mail'\n                value={this.state.email}\n                onChange={this.onChange}\n                valid={validObj.validEmail} />\n              <Input\n                type='password'\n                name='password'\n                label='Password'\n                placeholder='Enter password'\n                value={this.state.password}\n                onChange={this.onChange}\n                valid={validObj.validPassword} />\n              <input type='submit' className='btn btn-primary' value='Login' />\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    loginSuccess: state.login.success,\n    loginError: state.loginError\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    login: (email, password) => dispatch(loginAction(email, password)),\n    redirect: () => dispatch(redirectAction())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginPage))\n"]},"metadata":{},"sourceType":"module"}