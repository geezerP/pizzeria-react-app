{"ast":null,"code":"var _jsxFileName = \"/home/geezer/projects/pizzeria/pizzeria-react-app/src/components/details/ReviewsContainer.js\";\nimport React, { Component } from 'react';\nimport Review from './Review';\nimport createReviewValidator from '../../utils/createReviewValidator';\nimport toastr from 'toastr';\nimport { createProductReviewAction } from '../../actions/productsActions';\nimport { connect } from 'react-redux';\n\nclass ReviewsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.createReviewError.hasError) {\n      toastr.error(nextProps.createProductError.message);\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!createReviewValidator(this.state.review)) {\n      this.setState({\n        review: ''\n      });\n      return;\n    }\n\n    const data = {\n      review: this.state.review\n    };\n    this.props.createReview(this.props.product._id, data);\n    this.setState({\n      review: ''\n    });\n  }\n\n  render() {\n    const reviews = this.props.product.reviews.map((r, i) => React.createElement(Review, {\n      key: i,\n      review: r,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"row space-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Leave a review\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"review\",\n      value: this.state.review,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-secondary\",\n      value: \"Submit review\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))), reviews);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createReviewError: state.createReviewError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createReview: (id, data) => dispatch(createProductReviewAction(id, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewsContainer);","map":{"version":3,"sources":["/home/geezer/projects/pizzeria/pizzeria-react-app/src/components/details/ReviewsContainer.js"],"names":["React","Component","Review","createReviewValidator","toastr","createProductReviewAction","connect","ReviewsContainer","constructor","props","state","review","onChange","bind","onSubmit","componentWillReceiveProps","nextProps","createReviewError","hasError","error","createProductError","message","e","setState","target","name","value","preventDefault","data","createReview","product","_id","render","reviews","map","r","i","mapStateToProps","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Review from './Review'\nimport createReviewValidator from '../../utils/createReviewValidator'\nimport toastr from 'toastr'\nimport {createProductReviewAction} from '../../actions/productsActions'\nimport {connect} from 'react-redux'\n\nclass ReviewsContainer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      review: ''\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.createReviewError.hasError) {\n      toastr.error(nextProps.createProductError.message)\n    }\n  }\n\n  onChange (e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onSubmit (e) {\n    e.preventDefault()\n    if (!createReviewValidator(this.state.review)) {\n      this.setState({review: ''})\n      return\n    }\n\n    const data = {\n      review: this.state.review\n    }\n    this.props.createReview(this.props.product._id, data)\n    this.setState({review: ''})\n  }\n\n  render () {\n    const reviews = this.props.product.reviews.map((r, i) => (<Review key={i} review={r} />))\n    return (\n      <div className='row space-top'>\n        <div className='col-md-8'>\n          <form onSubmit={this.onSubmit}>\n            <legend>Leave a review</legend>\n            <div className='form-group'>\n              <textarea\n                className='form-control'\n                name='review'\n                value={this.state.review}\n                onChange={this.onChange} />\n            </div>\n            <div className='form-group'>\n              <input type='submit' className='btn btn-secondary' value='Submit review' />\n            </div>\n          </form>\n        </div>\n        {reviews}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    createReviewError: state.createReviewError\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    createReview: (id, data) => dispatch(createProductReviewAction(id, data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewsContainer)\n"]},"metadata":{},"sourceType":"module"}